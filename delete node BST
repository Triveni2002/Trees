class Solution {
    public TreeNode find(TreeNode root){
        if(root.left==null)return root.right;
        if(root.right==null)return root.left;
        TreeNode rightNode=root.right;
        TreeNode lastRight=findLast(root.left);
        lastRight.right=rightNode;
        return root.left;
    }
    public TreeNode findLast(TreeNode root){
        if(root.right==null)return root;
        return findLast(root.right);
    }
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null)return null;
        if(root.val==key)return find(root);
        TreeNode dup=root;
        while(root!=null){
            if(root.val>key){
                if(root.left!=null && root.left.val==key){
                    root.left=find(root.left);
                    break;
                }else{
                    root=root.left;
                }
            }
             else{
                if(root.right!=null && root.right.val==key){
                    root.right=find(root.right);
                    break;
                }else{
                    root=root.right;
                }
            }

        }
        return dup;

    }
}
